---

name: else
theory: |

  Let's write a function `getTypeOfSentence()` to analyze the text and return its type: *General sentence* for normal sentences and *Question sentence* for question sentences.

  ```javascript
    getTypeOfSentence('Hodor');  // General sentence
    getTypeOfSentence('Hodor?'); // Question sentence
  ```

  Implementation:

  ```javascript
  const getTypeOfSentence = (sentence) => {
    // Declare a variable to store the sentence type
    let sentenceType;
    // Predicate to check the text ending
    // If it ends with '?', it will return true,
    // otherwise false
    if (sentence.endsWith('?')) {
      // If the condition above holds true,
      // we have a question sentence.
      // Assign an appropriate value to sentenceType.
      sentenceType = 'Question';
    } else {
      // Otherwise, the sentenceType is 'General';
      sentenceType = 'General';
    }

    // Build a string via interpolation
    return `${sentenceType} sentence`;
  };
  ```

  We have added the keyword `else` and a new block with curly brackets. This block executes only if the condition in `if` is false.

  There are two ways to design an *if-else* clause. The negation allows you to change the order of the blocks:

  ```javascript
  const getTypeOfSentence = (sentence) => {
    let sentenceType;
    // Add negation
    // Code blocks of else and if statements swap
    if (!sentence.endsWith('?')) {
      sentenceType = 'General';
    } else {
      sentenceType = 'Question';
    }

    return `${sentenceType} sentence`;
  };
  ```

  Which way is preferable? It is easier for the human brain to reason in a straightforward manner rather than via negation. Try to pick a test that has no negations, and tune the contents of blocks to it.

instructions: |

  Write the `normalizeUrl()` function doing so-called data normalization. It takes a site address and returns it with *https://* at the beginning.

  The function accepts URLs as *URL* or *https://URL*, but always returns it as *https://URL*

  You can use the [startsWith()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith) method to check if the string starts with the prefix *https://*. And then add or omit *https://*.

  Examples:

  ```javascript
  normalizeUrl("google.com"); // "https://google.com"
  normalizeUrl("https://ai.fi"); // "https://ai.fi"
  ```

tips: []

definitions:
  - name: "else"
    description: "is a way to define the block of code that executes if the `if` condition is not satisfied"
